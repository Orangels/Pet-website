export let overview = {
    key:'overview',
    dataSource:[
        {title:'概述'},
        {text:'构建一个高性能的基于深度学习的计算机视觉工具需要许多系统级设计决策来保证训练和测试过程的高效进行，一个优秀的深度学习模型训练和测试工具包括数据制备、数据载入、网络构建、迭代优化、模型加载与保存、可视化和日志几大主要功能。为了保障Pet的全面性、灵活性和高效性，我们将以上组件进行了仔细的设计，极大地丰富了模型训练和测试过程中各个组件的功能。在Pet架构说明中，我们分享了设计Pet时所遵循的规则和基本原理。我们希望这些见解可以为深度学习行业内的学习者以及从业者带来帮助。\n'},
        {part_title:'工具的执行方式'},
        {text:'在设计Pet的过程中，秉承简洁高效的设计理念，使系统结构明了且代码逻辑清晰。在兼顾涉及视觉任务全面与运行高效的前提下，Pet同样具备一定的灵活性与可延展性，方便用户在现有架构中进行拓展及添加新的视觉任务解决方案。Pet执行方式如下图所示：'},
        {img:'sys_arch_chn'},
        {part_title:'平台的构成组件'},
        {text:'遵循执行方式，Pet的各个组件在深度学习模型的训练与测试过程中所发挥的作用如下：\n'},
        {h3_title:'配置系统'},
        {text:'所有基于Pet的视觉任务均采用配置系统进行模块化配置，使用配置系统作为控制接口可以直接对不同视觉任务的训练与测试进行指引。仅使用训练、测试脚本和配置系统即可完成深度学习模型的训练与测试。\n'},
        {h3_title:'数据制备'},
        {text:'对于不同的视觉任务，Pet支持在多种数据集上进行模型的训练和测试，并且规定了Pet标准的数据集源文件的文件结构与标注的格式。\n'},
        {h3_title:'数据载入'},
        {text:'Pet实现了一套标准的数据载入接口，同时提供了多种在线数据增强方式如尺度变换、旋转、翻折等使得神经网络训练具有更好的泛化效果。\n'},
        {h3_title:'模型构建'},
        {text:'在各类视觉任务中，我们将深度学习网络模型划分为特征提取网络、功能网络，任务输出与损失函数四个网络模块，通过网络模块的组合，可以灵活地构建不同的网络结构。这一规则具有较高的用户可延展性，只需定义新的`convbody`或`head`即可完成全新网络的搭建进行实验调试，提升重复实验时修改配置工作的效率。\n'},
        {h3_title:'迭代优化'},
        {text:'Pet提供了全面的优化超参数设置与优化器，为卷积神经网络的训练提供丰富的优化配置选择。针对不同的任务，Pet还给出了最优的训练配置以供借鉴，缩短学习周期。同时Pet还支持分布式数据并行训练与混合精度计算等高效计算技术。\n'},
        {h3_title:'模型加载与保存'},
        {text:'针对各类子任务，Pet在[MODEL_ZOO](http://www.petcv.net:3000/Model_Zoo)中提供了上千个预训练模型供训练与测试使用。同时使用高效的方式对训练的中间结果进行保存，防止因意外导致的训练停止或崩溃带来的时间损耗，支持从断点处恢复训练过程而无需修改任何训练参数。\n'},
        {h3_title:'可视化'},
        {text:'Pet提供了统一的模型输出可视化方案，用户可根据自身任务选择相应的可视化工具，以图像的形式直观呈现出深度学习模型预测的可视化结果。\n'},
        {h3_title:'日志'},
        {text:'Pet将学习率、误差、精度等模型训练状态通过日志功能实时记录，并且将每个检查点的精度和误差以文档和误差曲线的形式记录并保存。\n'}
    ]
}